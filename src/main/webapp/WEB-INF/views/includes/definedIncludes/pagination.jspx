<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<jsp:root xmlns:c="http://java.sun.com/jsp/jstl/core" 
	xmlns:fn="http://java.sun.com/jsp/jstl/functions" 
	xmlns:jsp="http://java.sun.com/JSP/Page" 
	xmlns:table="urn:jsptagdir:/WEB-INF/tags/table" 
	xmlns:spring="http://www.springframework.org/tags" 	
	xmlns:tiles="http://tiles.apache.org/tags-tiles" 
	xmlns:util="urn:jsptagdir:/WEB-INF/tags/util" version="2.0">
	
	<jsp:output omit-xml-declaration="yes"/>
	
	<!-- paramètres de la page -->	
	<tiles:useAttribute name="controllerURL" />
	<tiles:useAttribute name="fragmentName" />	
	
	<!-- éléments pour faire la pagination -->
	<table:tableLine region="bottom" height="50px">
		<!-- gestion des pages -->
		<div id="paginationContainer">
		
			<!-- première page -->
			<div class="paginationElementContainer">
				<spring:url value="/pagination/firstPage/${controllerURL}" var="firstPageFormActionURL" />
				<form id="firstPageForm" action="${firstPageFormActionURL }" class="paginationForm">
					<input id="firstPageButton" name="firstPageButton"/>
				</form>
				<spring:message code="pagination.firstPage.tooltip" var="firstPageButtonToolTip" javaScriptEscape="true" htmlEscape="false" />
		    	<script type="text/javascript">
		  			//decoration du bouton	
		    		Spring.addDecoration(new Spring.ElementDecoration({
						elementId : "firstPageButton", 
						widgetType : "dijit.form.Button", 
						widgetAttrs : {
							type: "button",
							label: "&lt;&lt;",
							title: "${firstPageButtonToolTip}"
						}
					})); 
		    	
		  			//evenement ajax
		    		Spring.addDecoration(new Spring.AjaxEventDecoration({
		    			elementId: "firstPageButton", 
		    			formId: "firstPageForm", 
		    			event: "onClick",    			
		    			params:{
		    				fragments: "${fragmentName}"
		    			}
		    		}));
		    		
		    		//afficher le chargement en cas de clic
					dojo.addOnLoad(function() {
						dojo.connect(dijit.byId("firstPageButton"), "onClick", function() {
							dijit.byId("waitingPanel").show();		
						});
					});
		    	</script>
	    	</div>
	    	
	    	<!-- page précédente -->
	    	<div class="paginationElementContainer">
		    	<spring:url value="/pagination/previousPage/${controllerURL}" var="previousPageFormActionURL" />
				<form id="previousPageForm" action="${previousPageFormActionURL }" class="paginationForm">
					<input id="previousPageButton" name="previousPageButton"/>
				</form>
				<spring:message code="pagination.previousPage.tooltip" var="previousPageButtonToolTip" javaScriptEscape="true" htmlEscape="false" />
		    	<script type="text/javascript">
		    		//decoration du bouton	
		  			Spring.addDecoration(new Spring.ElementDecoration({
						elementId : "previousPageButton", 
						widgetType : "dijit.form.Button", 
						widgetAttrs : {
							type: "button",
							label: "&lt;",
							title: "${previousPageButtonToolTip}"
						}
					})); 
		    		
		  			//evenement ajax
		    		Spring.addDecoration(new Spring.AjaxEventDecoration({
		    			elementId: "previousPageButton", 
		    			formId: "previousPageForm", 
		    			event: "onClick",    			
		    			params:{
		    				fragments: "${fragmentName}"
		    			}
		    		}));
		    		
		    		//afficher le chargement en cas de clic
					dojo.addOnLoad(function() {
						dojo.connect(dijit.byId("previousPageButton"), "onClick", function() {
							dijit.byId("waitingPanel").show();		
						});
					});
		    	</script>
			</div>
			
			<!-- liste des pages -->
			<div class="paginationElementContainer">
				<spring:url value="/pagination/selectPage/${controllerURL}" var="selectPageFormActionURL" />
				<form id="selectPageForm" action="${selectPageFormActionURL }" class="paginationForm">					
					<select id="selectPageList" name="page">
						<c:forEach var="page" begin="1" end="${paginationDTO.totalPage }">
							<option value="${page - 1}"><spring:message code="pagination.selectPage.XoutofY" arguments="${page},${paginationDTO.totalPage}" /></option>
						</c:forEach>
					</select>
				</form>
				<spring:message code="pagination.selectPage.tooltip" var="selectPageSelectToolTip" javaScriptEscape="true" htmlEscape="false" />
		    	<script type="text/javascript">
		  			Spring.addDecoration(new Spring.ElementDecoration({
						elementId : "selectPageList", 
						widgetType : "dijit.form.FilteringSelect", 
						widgetAttrs : {							
							title: "${selectPageSelectToolTip}",
							value: "${paginationDTO.currentPage}"
						}
					})); 
		    	
		  			//poster le formulaire pour sélectionner la page
		  			var selectPageListConnection = null;
					dojo.addOnLoad(function() {
						selectPageListConnection = dojo.connect(dijit.byId("selectPageList"), "onChange", function() {
							dojo.byId("selectPageForm").submit();
						});
					});
		    	</script>
	    	</div>
			
			<!-- page suivante -->
			<div class="paginationElementContainer">
		    	<spring:url value="/pagination/nextPage/${controllerURL}" var="nextPageFormActionURL" />
				<form id="nextPageForm" action="${nextPageFormActionURL }" class="paginationForm">
					<input id="nextPageButton" name="nextPageButton"/>
				</form>
				<spring:message code="pagination.nextPage.tooltip" var="nextPageButtonToolTip" javaScriptEscape="true" htmlEscape="false" />
		    	<script type="text/javascript">
		    		//decoration du bouton	
		  			Spring.addDecoration(new Spring.ElementDecoration({
						elementId : "nextPageButton", 
						widgetType : "dijit.form.Button", 
						widgetAttrs : {
							type: "button",
							label: "&gt;",
							title: "${nextPageButtonToolTip}"
						}
					})); 
		    	
		  			//evenement ajax
		    		Spring.addDecoration(new Spring.AjaxEventDecoration({
		    			elementId: "nextPageButton", 
		    			formId: "nextPageForm", 
		    			event: "onClick",    			
		    			params:{
		    				fragments: "${fragmentName}"
		    			}
		    		}));
		  			
		    		//afficher le chargement en cas de clic
					dojo.addOnLoad(function() {
						dojo.connect(dijit.byId("nextPageButton"), "onClick", function() {
							dijit.byId("waitingPanel").show();		
						});
					});
		    	</script>
	    	</div>
	    	
	    	<!-- dernière page -->
	    	<div class="paginationElementContainer">
		    	<spring:url value="/pagination/lastPage/${controllerURL}" var="lastPageFormActionURL" />
				<form id="lastPageForm" action="${lastPageFormActionURL }" class="paginationForm">
					<input id="lastPageButton" name="lastPageButton"/>
				</form>
				<spring:message code="pagination.lastPage.tooltip" var="lastPageButtonToolTip" javaScriptEscape="true" htmlEscape="false" />
		    	<script type="text/javascript">
		    		//decoration du bouton	
		  			Spring.addDecoration(new Spring.ElementDecoration({
						elementId : "lastPageButton", 
						widgetType : "dijit.form.Button", 
						widgetAttrs : {
							type: "button",
							label: "&gt;&gt;",
							title: "${lastPageButtonToolTip}"
						}
					})); 
		    	
		  			//evenement ajax
		    		Spring.addDecoration(new Spring.AjaxEventDecoration({
		    			elementId: "lastPageButton", 
		    			formId: "lastPageForm", 
		    			event: "onClick",    			
		    			params:{
		    				fragments: "${fragmentName}"
		    			}
		    		}));
		  			
		    		//afficher le chargement en cas de clic
					dojo.addOnLoad(function() {
						dojo.connect(dijit.byId("lastPageButton"), "onClick", function() {
							dijit.byId("waitingPanel").show();		
						});
					});
		    	</script>												
    		</div>
    		
    	</div>
    	
    	<!-- nombres d'éléments -->
    	<div id="paginationContainer">
    		<!-- nombre total d'éléments -->
    		<div class="paginationElementContainer">
    			<spring:message code="pagination.items.number" arguments="${paginationDTO.itemsNumber }" htmlEscape="false" />
    		</div>
    		
    		<!-- nombre d'éléments par page -->
    		<div class="paginationElementContainer">
    			<spring:url value="/pagination/itemsPerPage/${controllerURL}" var="itemsPerPageFormActionURL" />
				<form id="itemsPerPageForm" action="${itemsPerPageFormActionURL }" class="paginationForm">					
					<select id="itemsPerPageList" name="itemsPerPage">					
						<c:forEach var="pageItem" items="${paginationDTO.listOfOptions}">
							<option value="${pageItem}"><spring:message code="pagination.items.itemsPerPage" arguments="${pageItem}" /></option>
						</c:forEach>
					</select>
				</form>
				<spring:message code="pagination.items.itemsPerPage.tooltip" var="itemsPerPageSelectToolTip" javaScriptEscape="true" htmlEscape="false" />
		    	<script type="text/javascript">
		  			Spring.addDecoration(new Spring.ElementDecoration({
						elementId : "itemsPerPageList", 
						widgetType : "dijit.form.FilteringSelect", 
						widgetAttrs : {							
							title: "${itemsPerPageSelectToolTip}",
							value: "${paginationDTO.selectedOption}"
						}
					})); 
		    	
		  			//poster le formulaire pour sélectionner le nombre d'éléments par page
					dojo.addOnLoad(function() {
						dojo.connect(dijit.byId("itemsPerPageList"), "onChange", function() {
							dojo.byId("itemsPerPageForm").submit();
						});
					});
		    	</script>
    		</div>
    		
    	</div>
	</table:tableLine>
</jsp:root>